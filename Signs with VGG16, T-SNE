import numpy as np
import tensorflow as tf
import tensorflow_datasets as tfds
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt
from tensorflow.keras.applications.vgg16 import VGG16, preprocess_input
from tensorflow.keras.models import Model

# Загрузка датасета CIFAR-10
(ds_train, ds_test), ds_info = tfds.load(
    'beans', # bccd
    split=['train', 'test'],
    as_supervised=True,
    with_info=True,
)

# Функция предварительной обработки изображений
def preprocess_images(image, label):
    image = tf.image.resize(image, (224, 224))
    image = preprocess_input(image)
    return image, label

# Предварительная обработка датасета
ds_train = ds_train.map(preprocess_images).batch(32)
ds_test = ds_test.map(preprocess_images).batch(32)

# Загрузка модели VGG16 для извлечения признаков
base_model = VGG16(weights='imagenet', include_top=False)
base_model.trainable = False
model = Model(inputs=base_model.input, outputs=base_model.output)

# Извлечение признаков
features = []
labels = []
for images, label in ds_train:  # Уменьшаем количество для демонстрации
    features.extend(model.predict(images))
    labels.extend(label.numpy())

features = np.reshape(features, (len(features), -1))

# Использование t-SNE для визуализации признаков
tsne = TSNE(n_components=2, random_state=0)
features_2d = tsne.fit_transform(features)

# Визуализация
plt.figure(figsize=(10, 10))
for i in range(10):
    indices = np.where(np.array(labels) == i)[0]
    plt.scatter(features_2d[indices, 0], features_2d[indices, 1], label=ds_info.features['label'].names[i])
plt.legend()
plt.show()
